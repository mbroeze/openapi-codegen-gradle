/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nhlapi.api;

import nhlapi.invoker.ApiException;
import nhlapi.model.Error;
import java.time.LocalDate;
import nhlapi.model.StandingTypesInner;
import nhlapi.model.Standings;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StandingsApi
 */
public class StandingsApiTest {

    private final StandingsApi api = new StandingsApi();

    /**
     * Get all available NHL standing types.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStandingTypesTest() throws ApiException {
        //
        //List<StandingTypesInner> response = api.getStandingTypes();

        // TODO: test validations
    }
    /**
     * Get NHL division standings.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStandingsTest() throws ApiException {
        //
        //LocalDate season = null;
        //
        //LocalDate date = null;
        //
        //Standings response = api.getStandings(season, date);

        // TODO: test validations
    }
    /**
     * Get NHL standings for a specific standing type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStandingsByTypeTest() throws ApiException {
        //
        //String type = null;
        //
        //Standings response = api.getStandingsByType(type);

        // TODO: test validations
    }
}
