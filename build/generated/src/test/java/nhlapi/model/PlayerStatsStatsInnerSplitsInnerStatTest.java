/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nhlapi.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PlayerStatsStatsInnerSplitsInnerStat
 */
public class PlayerStatsStatsInnerSplitsInnerStatTest {
    private final PlayerStatsStatsInnerSplitsInnerStat model = new PlayerStatsStatsInnerSplitsInnerStat();

    /**
     * Model tests for PlayerStatsStatsInnerSplitsInnerStat
     */
    @Test
    public void testPlayerStatsStatsInnerSplitsInnerStat() {
        // TODO: test PlayerStatsStatsInnerSplitsInnerStat
    }

    /**
     * Test the property 'timeOnIce'
     */
    @Test
    public void timeOnIceTest() {
        // TODO: test timeOnIce
    }

    /**
     * Test the property 'assists'
     */
    @Test
    public void assistsTest() {
        // TODO: test assists
    }

    /**
     * Test the property 'goals'
     */
    @Test
    public void goalsTest() {
        // TODO: test goals
    }

    /**
     * Test the property 'pim'
     */
    @Test
    public void pimTest() {
        // TODO: test pim
    }

    /**
     * Test the property 'shots'
     */
    @Test
    public void shotsTest() {
        // TODO: test shots
    }

    /**
     * Test the property 'games'
     */
    @Test
    public void gamesTest() {
        // TODO: test games
    }

    /**
     * Test the property 'hits'
     */
    @Test
    public void hitsTest() {
        // TODO: test hits
    }

    /**
     * Test the property 'powerPlayGoals'
     */
    @Test
    public void powerPlayGoalsTest() {
        // TODO: test powerPlayGoals
    }

    /**
     * Test the property 'powerPlayPoints'
     */
    @Test
    public void powerPlayPointsTest() {
        // TODO: test powerPlayPoints
    }

    /**
     * Test the property 'powerPlayTimeOnIce'
     */
    @Test
    public void powerPlayTimeOnIceTest() {
        // TODO: test powerPlayTimeOnIce
    }

    /**
     * Test the property 'evenTimeOnIce'
     */
    @Test
    public void evenTimeOnIceTest() {
        // TODO: test evenTimeOnIce
    }

    /**
     * Test the property 'penaltyMinutes'
     */
    @Test
    public void penaltyMinutesTest() {
        // TODO: test penaltyMinutes
    }

    /**
     * Test the property 'faceOffPct'
     */
    @Test
    public void faceOffPctTest() {
        // TODO: test faceOffPct
    }

    /**
     * Test the property 'shotPct'
     */
    @Test
    public void shotPctTest() {
        // TODO: test shotPct
    }

    /**
     * Test the property 'gameWinningGoals'
     */
    @Test
    public void gameWinningGoalsTest() {
        // TODO: test gameWinningGoals
    }

    /**
     * Test the property 'overTimeGoals'
     */
    @Test
    public void overTimeGoalsTest() {
        // TODO: test overTimeGoals
    }

    /**
     * Test the property 'shortHandedGoals'
     */
    @Test
    public void shortHandedGoalsTest() {
        // TODO: test shortHandedGoals
    }

    /**
     * Test the property 'shortHandedPoints'
     */
    @Test
    public void shortHandedPointsTest() {
        // TODO: test shortHandedPoints
    }

    /**
     * Test the property 'shortHandedTimeOnIce'
     */
    @Test
    public void shortHandedTimeOnIceTest() {
        // TODO: test shortHandedTimeOnIce
    }

    /**
     * Test the property 'blocked'
     */
    @Test
    public void blockedTest() {
        // TODO: test blocked
    }

    /**
     * Test the property 'plusMinus'
     */
    @Test
    public void plusMinusTest() {
        // TODO: test plusMinus
    }

    /**
     * Test the property 'points'
     */
    @Test
    public void pointsTest() {
        // TODO: test points
    }

    /**
     * Test the property 'shifts'
     */
    @Test
    public void shiftsTest() {
        // TODO: test shifts
    }

    /**
     * Test the property 'timeOnIcePerGame'
     */
    @Test
    public void timeOnIcePerGameTest() {
        // TODO: test timeOnIcePerGame
    }

    /**
     * Test the property 'evenTimeOnIcePerGame'
     */
    @Test
    public void evenTimeOnIcePerGameTest() {
        // TODO: test evenTimeOnIcePerGame
    }

    /**
     * Test the property 'shortHandedTimeOnIcePerGame'
     */
    @Test
    public void shortHandedTimeOnIcePerGameTest() {
        // TODO: test shortHandedTimeOnIcePerGame
    }

    /**
     * Test the property 'powerPlayTimeOnIcePerGame'
     */
    @Test
    public void powerPlayTimeOnIcePerGameTest() {
        // TODO: test powerPlayTimeOnIcePerGame
    }

    /**
     * Test the property 'rankPowerPlayGoals'
     */
    @Test
    public void rankPowerPlayGoalsTest() {
        // TODO: test rankPowerPlayGoals
    }

    /**
     * Test the property 'rankBlockedShots'
     */
    @Test
    public void rankBlockedShotsTest() {
        // TODO: test rankBlockedShots
    }

    /**
     * Test the property 'rankAssists'
     */
    @Test
    public void rankAssistsTest() {
        // TODO: test rankAssists
    }

    /**
     * Test the property 'rankShotPct'
     */
    @Test
    public void rankShotPctTest() {
        // TODO: test rankShotPct
    }

    /**
     * Test the property 'rankGoals'
     */
    @Test
    public void rankGoalsTest() {
        // TODO: test rankGoals
    }

    /**
     * Test the property 'rankHits'
     */
    @Test
    public void rankHitsTest() {
        // TODO: test rankHits
    }

    /**
     * Test the property 'rankPenaltyMinutes'
     */
    @Test
    public void rankPenaltyMinutesTest() {
        // TODO: test rankPenaltyMinutes
    }

    /**
     * Test the property 'rankShortHandedGoals'
     */
    @Test
    public void rankShortHandedGoalsTest() {
        // TODO: test rankShortHandedGoals
    }

    /**
     * Test the property 'rankPlusMinus'
     */
    @Test
    public void rankPlusMinusTest() {
        // TODO: test rankPlusMinus
    }

    /**
     * Test the property 'rankShots'
     */
    @Test
    public void rankShotsTest() {
        // TODO: test rankShots
    }

    /**
     * Test the property 'rankPoints'
     */
    @Test
    public void rankPointsTest() {
        // TODO: test rankPoints
    }

    /**
     * Test the property 'rankOvertimeGoals'
     */
    @Test
    public void rankOvertimeGoalsTest() {
        // TODO: test rankOvertimeGoals
    }

    /**
     * Test the property 'rankGamesPlayed'
     */
    @Test
    public void rankGamesPlayedTest() {
        // TODO: test rankGamesPlayed
    }

    /**
     * Test the property 'goalsInFirstPeriod'
     */
    @Test
    public void goalsInFirstPeriodTest() {
        // TODO: test goalsInFirstPeriod
    }

    /**
     * Test the property 'goalsInSecondPeriod'
     */
    @Test
    public void goalsInSecondPeriodTest() {
        // TODO: test goalsInSecondPeriod
    }

    /**
     * Test the property 'goalsInThirdPeriod'
     */
    @Test
    public void goalsInThirdPeriodTest() {
        // TODO: test goalsInThirdPeriod
    }

    /**
     * Test the property 'goalsTrailingByOne'
     */
    @Test
    public void goalsTrailingByOneTest() {
        // TODO: test goalsTrailingByOne
    }

    /**
     * Test the property 'goalsTrailingByTwo'
     */
    @Test
    public void goalsTrailingByTwoTest() {
        // TODO: test goalsTrailingByTwo
    }

    /**
     * Test the property 'goalsTrailingByThreePlus'
     */
    @Test
    public void goalsTrailingByThreePlusTest() {
        // TODO: test goalsTrailingByThreePlus
    }

    /**
     * Test the property 'goalsWhenTied'
     */
    @Test
    public void goalsWhenTiedTest() {
        // TODO: test goalsWhenTied
    }

    /**
     * Test the property 'goalsLeadingByOne'
     */
    @Test
    public void goalsLeadingByOneTest() {
        // TODO: test goalsLeadingByOne
    }

    /**
     * Test the property 'goalsLeadingByTwo'
     */
    @Test
    public void goalsLeadingByTwoTest() {
        // TODO: test goalsLeadingByTwo
    }

}
