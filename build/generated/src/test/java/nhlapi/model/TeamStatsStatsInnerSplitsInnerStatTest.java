/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nhlapi.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TeamStatsStatsInnerSplitsInnerStat
 */
public class TeamStatsStatsInnerSplitsInnerStatTest {
    private final TeamStatsStatsInnerSplitsInnerStat model = new TeamStatsStatsInnerSplitsInnerStat();

    /**
     * Model tests for TeamStatsStatsInnerSplitsInnerStat
     */
    @Test
    public void testTeamStatsStatsInnerSplitsInnerStat() {
        // TODO: test TeamStatsStatsInnerSplitsInnerStat
    }

    /**
     * Test the property 'gamesPlayed'
     */
    @Test
    public void gamesPlayedTest() {
        // TODO: test gamesPlayed
    }

    /**
     * Test the property 'wins'
     */
    @Test
    public void winsTest() {
        // TODO: test wins
    }

    /**
     * Test the property 'losses'
     */
    @Test
    public void lossesTest() {
        // TODO: test losses
    }

    /**
     * Test the property 'ot'
     */
    @Test
    public void otTest() {
        // TODO: test ot
    }

    /**
     * Test the property 'pts'
     */
    @Test
    public void ptsTest() {
        // TODO: test pts
    }

    /**
     * Test the property 'ptPctg'
     */
    @Test
    public void ptPctgTest() {
        // TODO: test ptPctg
    }

    /**
     * Test the property 'goalsPerGame'
     */
    @Test
    public void goalsPerGameTest() {
        // TODO: test goalsPerGame
    }

    /**
     * Test the property 'goalsAgainstPerGame'
     */
    @Test
    public void goalsAgainstPerGameTest() {
        // TODO: test goalsAgainstPerGame
    }

    /**
     * Test the property 'evGGARatio'
     */
    @Test
    public void evGGARatioTest() {
        // TODO: test evGGARatio
    }

    /**
     * Test the property 'powerPlayPercentage'
     */
    @Test
    public void powerPlayPercentageTest() {
        // TODO: test powerPlayPercentage
    }

    /**
     * Test the property 'powerPlayGoals'
     */
    @Test
    public void powerPlayGoalsTest() {
        // TODO: test powerPlayGoals
    }

    /**
     * Test the property 'powerPlayGoalsAgainst'
     */
    @Test
    public void powerPlayGoalsAgainstTest() {
        // TODO: test powerPlayGoalsAgainst
    }

    /**
     * Test the property 'powerPlayOpportunities'
     */
    @Test
    public void powerPlayOpportunitiesTest() {
        // TODO: test powerPlayOpportunities
    }

    /**
     * Test the property 'penaltyKillPercentage'
     */
    @Test
    public void penaltyKillPercentageTest() {
        // TODO: test penaltyKillPercentage
    }

    /**
     * Test the property 'shotsPerGame'
     */
    @Test
    public void shotsPerGameTest() {
        // TODO: test shotsPerGame
    }

    /**
     * Test the property 'shotsAllowed'
     */
    @Test
    public void shotsAllowedTest() {
        // TODO: test shotsAllowed
    }

    /**
     * Test the property 'winScoreFirst'
     */
    @Test
    public void winScoreFirstTest() {
        // TODO: test winScoreFirst
    }

    /**
     * Test the property 'winOppScoreFirst'
     */
    @Test
    public void winOppScoreFirstTest() {
        // TODO: test winOppScoreFirst
    }

    /**
     * Test the property 'winLeadFirstPer'
     */
    @Test
    public void winLeadFirstPerTest() {
        // TODO: test winLeadFirstPer
    }

    /**
     * Test the property 'winLeadSecondPer'
     */
    @Test
    public void winLeadSecondPerTest() {
        // TODO: test winLeadSecondPer
    }

    /**
     * Test the property 'winOutshootOpp'
     */
    @Test
    public void winOutshootOppTest() {
        // TODO: test winOutshootOpp
    }

    /**
     * Test the property 'winOutshotByOpp'
     */
    @Test
    public void winOutshotByOppTest() {
        // TODO: test winOutshotByOpp
    }

    /**
     * Test the property 'faceOffsTaken'
     */
    @Test
    public void faceOffsTakenTest() {
        // TODO: test faceOffsTaken
    }

    /**
     * Test the property 'faceOffsWon'
     */
    @Test
    public void faceOffsWonTest() {
        // TODO: test faceOffsWon
    }

    /**
     * Test the property 'faceOffsLost'
     */
    @Test
    public void faceOffsLostTest() {
        // TODO: test faceOffsLost
    }

    /**
     * Test the property 'faceOffWinPercentage'
     */
    @Test
    public void faceOffWinPercentageTest() {
        // TODO: test faceOffWinPercentage
    }

    /**
     * Test the property 'shootingPctg'
     */
    @Test
    public void shootingPctgTest() {
        // TODO: test shootingPctg
    }

    /**
     * Test the property 'savePctg'
     */
    @Test
    public void savePctgTest() {
        // TODO: test savePctg
    }

}
