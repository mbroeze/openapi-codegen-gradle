/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nhlapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import nhlapi.model.GameContentEditorial;
import nhlapi.model.GameContentHighlights;
import nhlapi.model.GameContentMedia;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GameContent
 */
@JsonPropertyOrder({
  GameContent.JSON_PROPERTY_COPYRIGHT,
  GameContent.JSON_PROPERTY_LINK,
  GameContent.JSON_PROPERTY_EDITORIAL,
  GameContent.JSON_PROPERTY_MEDIA,
  GameContent.JSON_PROPERTY_HIGHLIGHTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-14T14:36:24.881091-05:00[America/Toronto]")
public class GameContent {
  public static final String JSON_PROPERTY_COPYRIGHT = "copyright";
  private String copyright;

  public static final String JSON_PROPERTY_LINK = "link";
  private URI link;

  public static final String JSON_PROPERTY_EDITORIAL = "editorial";
  private GameContentEditorial editorial;

  public static final String JSON_PROPERTY_MEDIA = "media";
  private GameContentMedia media;

  public static final String JSON_PROPERTY_HIGHLIGHTS = "highlights";
  private GameContentHighlights highlights;

  public GameContent() {
  }

  public GameContent copyright(String copyright) {
    
    this.copyright = copyright;
    return this;
  }

   /**
   * Get copyright
   * @return copyright
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COPYRIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCopyright() {
    return copyright;
  }


  @JsonProperty(JSON_PROPERTY_COPYRIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCopyright(String copyright) {
    this.copyright = copyright;
  }


  public GameContent link(URI link) {
    
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/api/v1/game/2017020851/content", value = "")
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(URI link) {
    this.link = link;
  }


  public GameContent editorial(GameContentEditorial editorial) {
    
    this.editorial = editorial;
    return this;
  }

   /**
   * Get editorial
   * @return editorial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EDITORIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GameContentEditorial getEditorial() {
    return editorial;
  }


  @JsonProperty(JSON_PROPERTY_EDITORIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditorial(GameContentEditorial editorial) {
    this.editorial = editorial;
  }


  public GameContent media(GameContentMedia media) {
    
    this.media = media;
    return this;
  }

   /**
   * Get media
   * @return media
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GameContentMedia getMedia() {
    return media;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedia(GameContentMedia media) {
    this.media = media;
  }


  public GameContent highlights(GameContentHighlights highlights) {
    
    this.highlights = highlights;
    return this;
  }

   /**
   * Get highlights
   * @return highlights
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HIGHLIGHTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GameContentHighlights getHighlights() {
    return highlights;
  }


  @JsonProperty(JSON_PROPERTY_HIGHLIGHTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHighlights(GameContentHighlights highlights) {
    this.highlights = highlights;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameContent gameContent = (GameContent) o;
    return Objects.equals(this.copyright, gameContent.copyright) &&
        Objects.equals(this.link, gameContent.link) &&
        Objects.equals(this.editorial, gameContent.editorial) &&
        Objects.equals(this.media, gameContent.media) &&
        Objects.equals(this.highlights, gameContent.highlights);
  }

  @Override
  public int hashCode() {
    return Objects.hash(copyright, link, editorial, media, highlights);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameContent {\n");
    sb.append("    copyright: ").append(toIndentedString(copyright)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    editorial: ").append(toIndentedString(editorial)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    highlights: ").append(toIndentedString(highlights)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

