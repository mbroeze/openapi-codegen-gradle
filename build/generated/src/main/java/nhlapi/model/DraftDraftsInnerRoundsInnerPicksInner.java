/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nhlapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import nhlapi.model.DraftDraftsInnerRoundsInnerPicksInnerProspect;
import nhlapi.model.DraftDraftsInnerRoundsInnerPicksInnerTeam;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DraftDraftsInnerRoundsInnerPicksInner
 */
@JsonPropertyOrder({
  DraftDraftsInnerRoundsInnerPicksInner.JSON_PROPERTY_YEAR,
  DraftDraftsInnerRoundsInnerPicksInner.JSON_PROPERTY_ROUND,
  DraftDraftsInnerRoundsInnerPicksInner.JSON_PROPERTY_PICK_OVERALL,
  DraftDraftsInnerRoundsInnerPicksInner.JSON_PROPERTY_PICK_IN_ROUND,
  DraftDraftsInnerRoundsInnerPicksInner.JSON_PROPERTY_TEAM,
  DraftDraftsInnerRoundsInnerPicksInner.JSON_PROPERTY_PROSPECT
})
@JsonTypeName("Draft_drafts_inner_rounds_inner_picks_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-14T14:36:24.881091-05:00[America/Toronto]")
public class DraftDraftsInnerRoundsInnerPicksInner {
  public static final String JSON_PROPERTY_YEAR = "year";
  private BigDecimal year;

  public static final String JSON_PROPERTY_ROUND = "round";
  private String round;

  public static final String JSON_PROPERTY_PICK_OVERALL = "pickOverall";
  private BigDecimal pickOverall;

  public static final String JSON_PROPERTY_PICK_IN_ROUND = "pickInRound";
  private BigDecimal pickInRound;

  public static final String JSON_PROPERTY_TEAM = "team";
  private DraftDraftsInnerRoundsInnerPicksInnerTeam team;

  public static final String JSON_PROPERTY_PROSPECT = "prospect";
  private DraftDraftsInnerRoundsInnerPicksInnerProspect prospect;

  public DraftDraftsInnerRoundsInnerPicksInner() {
  }

  public DraftDraftsInnerRoundsInnerPicksInner year(BigDecimal year) {
    
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2017", value = "")
  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getYear() {
    return year;
  }


  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYear(BigDecimal year) {
    this.year = year;
  }


  public DraftDraftsInnerRoundsInnerPicksInner round(String round) {
    
    this.round = round;
    return this;
  }

   /**
   * Get round
   * @return round
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_ROUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRound() {
    return round;
  }


  @JsonProperty(JSON_PROPERTY_ROUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRound(String round) {
    this.round = round;
  }


  public DraftDraftsInnerRoundsInnerPicksInner pickOverall(BigDecimal pickOverall) {
    
    this.pickOverall = pickOverall;
    return this;
  }

   /**
   * Get pickOverall
   * @return pickOverall
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_PICK_OVERALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPickOverall() {
    return pickOverall;
  }


  @JsonProperty(JSON_PROPERTY_PICK_OVERALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPickOverall(BigDecimal pickOverall) {
    this.pickOverall = pickOverall;
  }


  public DraftDraftsInnerRoundsInnerPicksInner pickInRound(BigDecimal pickInRound) {
    
    this.pickInRound = pickInRound;
    return this;
  }

   /**
   * Get pickInRound
   * @return pickInRound
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")
  @JsonProperty(JSON_PROPERTY_PICK_IN_ROUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPickInRound() {
    return pickInRound;
  }


  @JsonProperty(JSON_PROPERTY_PICK_IN_ROUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPickInRound(BigDecimal pickInRound) {
    this.pickInRound = pickInRound;
  }


  public DraftDraftsInnerRoundsInnerPicksInner team(DraftDraftsInnerRoundsInnerPicksInnerTeam team) {
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DraftDraftsInnerRoundsInnerPicksInnerTeam getTeam() {
    return team;
  }


  @JsonProperty(JSON_PROPERTY_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeam(DraftDraftsInnerRoundsInnerPicksInnerTeam team) {
    this.team = team;
  }


  public DraftDraftsInnerRoundsInnerPicksInner prospect(DraftDraftsInnerRoundsInnerPicksInnerProspect prospect) {
    
    this.prospect = prospect;
    return this;
  }

   /**
   * Get prospect
   * @return prospect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROSPECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DraftDraftsInnerRoundsInnerPicksInnerProspect getProspect() {
    return prospect;
  }


  @JsonProperty(JSON_PROPERTY_PROSPECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProspect(DraftDraftsInnerRoundsInnerPicksInnerProspect prospect) {
    this.prospect = prospect;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DraftDraftsInnerRoundsInnerPicksInner draftDraftsInnerRoundsInnerPicksInner = (DraftDraftsInnerRoundsInnerPicksInner) o;
    return Objects.equals(this.year, draftDraftsInnerRoundsInnerPicksInner.year) &&
        Objects.equals(this.round, draftDraftsInnerRoundsInnerPicksInner.round) &&
        Objects.equals(this.pickOverall, draftDraftsInnerRoundsInnerPicksInner.pickOverall) &&
        Objects.equals(this.pickInRound, draftDraftsInnerRoundsInnerPicksInner.pickInRound) &&
        Objects.equals(this.team, draftDraftsInnerRoundsInnerPicksInner.team) &&
        Objects.equals(this.prospect, draftDraftsInnerRoundsInnerPicksInner.prospect);
  }

  @Override
  public int hashCode() {
    return Objects.hash(year, round, pickOverall, pickInRound, team, prospect);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DraftDraftsInnerRoundsInnerPicksInner {\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    round: ").append(toIndentedString(round)).append("\n");
    sb.append("    pickOverall: ").append(toIndentedString(pickOverall)).append("\n");
    sb.append("    pickInRound: ").append(toIndentedString(pickInRound)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    prospect: ").append(toIndentedString(prospect)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

