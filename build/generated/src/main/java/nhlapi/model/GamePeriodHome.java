/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nhlapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GamePeriodHome
 */
@JsonPropertyOrder({
  GamePeriodHome.JSON_PROPERTY_GOALS,
  GamePeriodHome.JSON_PROPERTY_SHOTS_ON_GOAL,
  GamePeriodHome.JSON_PROPERTY_RINK_SIDE
})
@JsonTypeName("GamePeriod_home")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-14T14:36:24.881091-05:00[America/Toronto]")
public class GamePeriodHome {
  public static final String JSON_PROPERTY_GOALS = "goals";
  private BigDecimal goals;

  public static final String JSON_PROPERTY_SHOTS_ON_GOAL = "shotsOnGoal";
  private BigDecimal shotsOnGoal;

  public static final String JSON_PROPERTY_RINK_SIDE = "rinkSide";
  private String rinkSide;

  public GamePeriodHome() {
  }

  public GamePeriodHome goals(BigDecimal goals) {
    
    this.goals = goals;
    return this;
  }

   /**
   * Get goals
   * @return goals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "")
  @JsonProperty(JSON_PROPERTY_GOALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getGoals() {
    return goals;
  }


  @JsonProperty(JSON_PROPERTY_GOALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGoals(BigDecimal goals) {
    this.goals = goals;
  }


  public GamePeriodHome shotsOnGoal(BigDecimal shotsOnGoal) {
    
    this.shotsOnGoal = shotsOnGoal;
    return this;
  }

   /**
   * Get shotsOnGoal
   * @return shotsOnGoal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14", value = "")
  @JsonProperty(JSON_PROPERTY_SHOTS_ON_GOAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getShotsOnGoal() {
    return shotsOnGoal;
  }


  @JsonProperty(JSON_PROPERTY_SHOTS_ON_GOAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShotsOnGoal(BigDecimal shotsOnGoal) {
    this.shotsOnGoal = shotsOnGoal;
  }


  public GamePeriodHome rinkSide(String rinkSide) {
    
    this.rinkSide = rinkSide;
    return this;
  }

   /**
   * Get rinkSide
   * @return rinkSide
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "left", value = "")
  @JsonProperty(JSON_PROPERTY_RINK_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRinkSide() {
    return rinkSide;
  }


  @JsonProperty(JSON_PROPERTY_RINK_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRinkSide(String rinkSide) {
    this.rinkSide = rinkSide;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GamePeriodHome gamePeriodHome = (GamePeriodHome) o;
    return Objects.equals(this.goals, gamePeriodHome.goals) &&
        Objects.equals(this.shotsOnGoal, gamePeriodHome.shotsOnGoal) &&
        Objects.equals(this.rinkSide, gamePeriodHome.rinkSide);
  }

  @Override
  public int hashCode() {
    return Objects.hash(goals, shotsOnGoal, rinkSide);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GamePeriodHome {\n");
    sb.append("    goals: ").append(toIndentedString(goals)).append("\n");
    sb.append("    shotsOnGoal: ").append(toIndentedString(shotsOnGoal)).append("\n");
    sb.append("    rinkSide: ").append(toIndentedString(rinkSide)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

