/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nhlapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PhotoCuts
 */
@JsonPropertyOrder({
  PhotoCuts.JSON_PROPERTY_ASPECT_RATIO,
  PhotoCuts.JSON_PROPERTY_WIDTH,
  PhotoCuts.JSON_PROPERTY_HEIGHT,
  PhotoCuts.JSON_PROPERTY_SRC,
  PhotoCuts.JSON_PROPERTY_AT2X,
  PhotoCuts.JSON_PROPERTY_AT3X
})
@JsonTypeName("Photo_cuts")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-14T14:36:24.881091-05:00[America/Toronto]")
public class PhotoCuts {
  public static final String JSON_PROPERTY_ASPECT_RATIO = "aspectRatio";
  private String aspectRatio;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private BigDecimal width;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private BigDecimal height;

  public static final String JSON_PROPERTY_SRC = "src";
  private String src;

  public static final String JSON_PROPERTY_AT2X = "at2x";
  private String at2x;

  public static final String JSON_PROPERTY_AT3X = "at3x";
  private String at3x;

  public PhotoCuts() {
  }

  public PhotoCuts aspectRatio(String aspectRatio) {
    
    this.aspectRatio = aspectRatio;
    return this;
  }

   /**
   * Get aspectRatio
   * @return aspectRatio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "16:9", value = "")
  @JsonProperty(JSON_PROPERTY_ASPECT_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAspectRatio() {
    return aspectRatio;
  }


  @JsonProperty(JSON_PROPERTY_ASPECT_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAspectRatio(String aspectRatio) {
    this.aspectRatio = aspectRatio;
  }


  public PhotoCuts width(BigDecimal width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2568", value = "")
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidth(BigDecimal width) {
    this.width = width;
  }


  public PhotoCuts height(BigDecimal height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1444", value = "")
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public PhotoCuts src(String src) {
    
    this.src = src;
    return this;
  }

   /**
   * Get src
   * @return src
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://nhl.bamcontent.com/images/photos/295824704/2568x1444/cut.jpg", value = "")
  @JsonProperty(JSON_PROPERTY_SRC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSrc() {
    return src;
  }


  @JsonProperty(JSON_PROPERTY_SRC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSrc(String src) {
    this.src = src;
  }


  public PhotoCuts at2x(String at2x) {
    
    this.at2x = at2x;
    return this;
  }

   /**
   * Get at2x
   * @return at2x
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://nhl.bamcontent.com/images/photos/295824704/2568x1444/cut.jpg", value = "")
  @JsonProperty(JSON_PROPERTY_AT2X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAt2x() {
    return at2x;
  }


  @JsonProperty(JSON_PROPERTY_AT2X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAt2x(String at2x) {
    this.at2x = at2x;
  }


  public PhotoCuts at3x(String at3x) {
    
    this.at3x = at3x;
    return this;
  }

   /**
   * Get at3x
   * @return at3x
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://nhl.bamcontent.com/images/photos/295824704/2568x1444/cut.jpg", value = "")
  @JsonProperty(JSON_PROPERTY_AT3X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAt3x() {
    return at3x;
  }


  @JsonProperty(JSON_PROPERTY_AT3X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAt3x(String at3x) {
    this.at3x = at3x;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhotoCuts photoCuts = (PhotoCuts) o;
    return Objects.equals(this.aspectRatio, photoCuts.aspectRatio) &&
        Objects.equals(this.width, photoCuts.width) &&
        Objects.equals(this.height, photoCuts.height) &&
        Objects.equals(this.src, photoCuts.src) &&
        Objects.equals(this.at2x, photoCuts.at2x) &&
        Objects.equals(this.at3x, photoCuts.at3x);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aspectRatio, width, height, src, at2x, at3x);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhotoCuts {\n");
    sb.append("    aspectRatio: ").append(toIndentedString(aspectRatio)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    src: ").append(toIndentedString(src)).append("\n");
    sb.append("    at2x: ").append(toIndentedString(at2x)).append("\n");
    sb.append("    at3x: ").append(toIndentedString(at3x)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

