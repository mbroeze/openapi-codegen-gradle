/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nhlapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import nhlapi.model.DivisionConference;
import nhlapi.model.StandingsRecordsInnerDivision;
import nhlapi.model.StandingsRecordsInnerLeague;
import nhlapi.model.StandingsRecordsInnerTeamRecordsInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StandingsRecordsInner
 */
@JsonPropertyOrder({
  StandingsRecordsInner.JSON_PROPERTY_STANDINGS_TYPE,
  StandingsRecordsInner.JSON_PROPERTY_LEAGUE,
  StandingsRecordsInner.JSON_PROPERTY_DIVISION,
  StandingsRecordsInner.JSON_PROPERTY_CONFERENCE,
  StandingsRecordsInner.JSON_PROPERTY_TEAM_RECORDS
})
@JsonTypeName("Standings_records_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-14T14:36:24.881091-05:00[America/Toronto]")
public class StandingsRecordsInner {
  /**
   * Gets or Sets standingsType
   */
  public enum StandingsTypeEnum {
    REGULARSEASON("regularSeason");

    private String value;

    StandingsTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StandingsTypeEnum fromValue(String value) {
      for (StandingsTypeEnum b : StandingsTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STANDINGS_TYPE = "standingsType";
  private StandingsTypeEnum standingsType;

  public static final String JSON_PROPERTY_LEAGUE = "league";
  private StandingsRecordsInnerLeague league;

  public static final String JSON_PROPERTY_DIVISION = "division";
  private StandingsRecordsInnerDivision division;

  public static final String JSON_PROPERTY_CONFERENCE = "conference";
  private DivisionConference conference;

  public static final String JSON_PROPERTY_TEAM_RECORDS = "teamRecords";
  private List<StandingsRecordsInnerTeamRecordsInner> teamRecords = null;

  public StandingsRecordsInner() {
  }

  public StandingsRecordsInner standingsType(StandingsTypeEnum standingsType) {
    
    this.standingsType = standingsType;
    return this;
  }

   /**
   * Get standingsType
   * @return standingsType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STANDINGS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StandingsTypeEnum getStandingsType() {
    return standingsType;
  }


  @JsonProperty(JSON_PROPERTY_STANDINGS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStandingsType(StandingsTypeEnum standingsType) {
    this.standingsType = standingsType;
  }


  public StandingsRecordsInner league(StandingsRecordsInnerLeague league) {
    
    this.league = league;
    return this;
  }

   /**
   * Get league
   * @return league
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LEAGUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StandingsRecordsInnerLeague getLeague() {
    return league;
  }


  @JsonProperty(JSON_PROPERTY_LEAGUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeague(StandingsRecordsInnerLeague league) {
    this.league = league;
  }


  public StandingsRecordsInner division(StandingsRecordsInnerDivision division) {
    
    this.division = division;
    return this;
  }

   /**
   * Get division
   * @return division
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DIVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StandingsRecordsInnerDivision getDivision() {
    return division;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivision(StandingsRecordsInnerDivision division) {
    this.division = division;
  }


  public StandingsRecordsInner conference(DivisionConference conference) {
    
    this.conference = conference;
    return this;
  }

   /**
   * Get conference
   * @return conference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DivisionConference getConference() {
    return conference;
  }


  @JsonProperty(JSON_PROPERTY_CONFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConference(DivisionConference conference) {
    this.conference = conference;
  }


  public StandingsRecordsInner teamRecords(List<StandingsRecordsInnerTeamRecordsInner> teamRecords) {
    
    this.teamRecords = teamRecords;
    return this;
  }

  public StandingsRecordsInner addTeamRecordsItem(StandingsRecordsInnerTeamRecordsInner teamRecordsItem) {
    if (this.teamRecords == null) {
      this.teamRecords = new ArrayList<>();
    }
    this.teamRecords.add(teamRecordsItem);
    return this;
  }

   /**
   * Get teamRecords
   * @return teamRecords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEAM_RECORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<StandingsRecordsInnerTeamRecordsInner> getTeamRecords() {
    return teamRecords;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_RECORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamRecords(List<StandingsRecordsInnerTeamRecordsInner> teamRecords) {
    this.teamRecords = teamRecords;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StandingsRecordsInner standingsRecordsInner = (StandingsRecordsInner) o;
    return Objects.equals(this.standingsType, standingsRecordsInner.standingsType) &&
        Objects.equals(this.league, standingsRecordsInner.league) &&
        Objects.equals(this.division, standingsRecordsInner.division) &&
        Objects.equals(this.conference, standingsRecordsInner.conference) &&
        Objects.equals(this.teamRecords, standingsRecordsInner.teamRecords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(standingsType, league, division, conference, teamRecords);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StandingsRecordsInner {\n");
    sb.append("    standingsType: ").append(toIndentedString(standingsType)).append("\n");
    sb.append("    league: ").append(toIndentedString(league)).append("\n");
    sb.append("    division: ").append(toIndentedString(division)).append("\n");
    sb.append("    conference: ").append(toIndentedString(conference)).append("\n");
    sb.append("    teamRecords: ").append(toIndentedString(teamRecords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

